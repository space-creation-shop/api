<!DOCTYPE html>
<html>
<head>
  <title>Simulateur de bourse</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    canvas {
      max-width: 800px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <h1>Simulateur de bourse</h1>
  <canvas id="graphique"></canvas>

  <script>
    const socket = io();

    // Configuration du graphique
    const config = {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Valeur de la bourse',
          data: [],
          borderColor: 'blue',
          backgroundColor: 'rgba(0, 0, 255, 0.2)',
          borderWidth: 2,
          pointRadius: 0,
          tension: 0.3,
          fill: true
        }]
      },
      options: {
        responsive: true,
        interaction: {
          intersect: false,
          mode: 'index'
        },
        scales: {
          x: {
            display: true,
            ticks: {
              display: false
            }
          },
          y: {
            display: true,
            suggestedMin: 0,
            suggestedMax: 1000,
            ticks: {
              stepSize: 100
            }
          }
        },
        plugins: {
          legend: {
            display: false
          }
        }
      }
    };

    // Initialisation du graphique
    const ctx = document.getElementById('graphique').getContext('2d');
    const graphique = new Chart(ctx, config);

    // Ajout des données au graphique
    const ajouterDonnees = (temps, valeur) => {
      graphique.data.labels.push(temps);
      graphique.data.datasets[0].data.push(valeur);
      graphique.update({
        duration: 0 // Désactiver les animations de mise à jour
      });
    };

    // Gestion des nouvelles valeurs de la bourse
    socket.on('nouvelleValeur', (valeur) => {
      const tempsActuel = new Date().toLocaleTimeString();
      ajouterDonnees(tempsActuel, valeur);
    });

    // Supprimer les données les plus anciennes du graphique
    const supprimerDonneesAnciennes = () => {
      if (graphique.data.labels.length >= 10) {
        graphique.data.labels.shift();
        graphique.data.datasets[0].data.shift();
      }
    };

    // Mise à jour continue du graphique

  </script>
</body>
</html>
